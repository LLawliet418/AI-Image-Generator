{"ast":null,"code":"var _jsxFileName = \"/Users/louisechristensen/Desktop/For Github/AI Image Generator/ai_image_generator/src/Components/ImageGenerator/ImageGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './ImageGenerator.css';\nimport default_img1 from '../Assets/default_img1.png';\nimport default_img2 from '../Assets/default_img2.png';\nimport default_img3 from '../Assets/default_img3.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const [imgUrls, setImgUrls] = useState([default_img1, default_img2, default_img3]);\n  const inputRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const downloadImage = src => {\n    const a = document.createElement('a');\n    a.href = src;\n    a.download = 'downloaded_file.jpg';\n    a.style.display = 'none';\n    document.body.appendChild(a);\n  };\n  const generateImages = async () => {\n    if (inputRef.current.value === \"\") {\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/images/generations\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer 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\",\n          \"User-Agent\": \"Chrome\"\n        },\n        body: JSON.stringify({\n          prompt: `${inputRef.current.value}`,\n          n: 3,\n          size: \"512x512\"\n        })\n      });\n      const data = await response.json();\n      const urls = data.data.map(image => image.url);\n      setImgUrls(urls);\n    } catch (error) {\n      console.error(\"Error generating images:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai_image_generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"AI Image Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img_loader\",\n        children: imgUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            alt: `Generated ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"download_btn\",\n            onClick: () => downloadImage(url),\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading_bar_container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: loading ? \"loading_bar_full\" : \"loading_bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: loading ? \"loading_text\" : \"display_none\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        className: \"search_input\",\n        placeholder: \"Guinea pigs in a rocket in space\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate_btn\",\n        onClick: generateImages,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGenerator, \"a85vzye3IuYeiF3t8R2ZuNrmxbA=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useRef","useState","default_img1","default_img2","default_img3","jsxDEV","_jsxDEV","ImageGenerator","_s","imgUrls","setImgUrls","inputRef","loading","setLoading","downloadImage","src","a","document","createElement","href","download","style","display","body","appendChild","generateImages","current","value","response","fetch","method","headers","Authorization","JSON","stringify","prompt","n","size","data","json","urls","map","image","url","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","alt","onClick","type","ref","placeholder","_c","$RefreshReg$"],"sources":["/Users/louisechristensen/Desktop/For Github/AI Image Generator/ai_image_generator/src/Components/ImageGenerator/ImageGenerator.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport './ImageGenerator.css';\nimport default_img1 from '../Assets/default_img1.png';\nimport default_img2 from '../Assets/default_img2.png';\nimport default_img3 from '../Assets/default_img3.png';\n\nconst ImageGenerator = () => {\n  const [imgUrls, setImgUrls] = useState([default_img1, default_img2, default_img3]);\n  const inputRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n\n  const downloadImage = (src) => {\n  const a = document.createElement('a');\n  a.href = src;\n  a.download = 'downloaded_file.jpg'; \n  a.style.display = 'none';\n  document.body.appendChild(a);\n  \n}\n\n  \n\n  const generateImages = async () => {\n    if (inputRef.current.value === \"\") {\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/images/generations\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer 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\",\n          \"User-Agent\": \"Chrome\",\n        },\n        body: JSON.stringify({\n          prompt: `${inputRef.current.value}`,\n          n: 3,\n          size: \"512x512\",\n        }),\n      });\n\n      const data = await response.json();\n      const urls = data.data.map(image => image.url);\n      setImgUrls(urls);\n    } catch (error) {\n      console.error(\"Error generating images:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <div className='ai_image_generator'>\n      <div className='header'>AI Image Generator</div>\n      <div className='img_container'>\n        <div className='img_loader'>\n          {imgUrls.map((url, index) => (\n            <div key={index} className='image'>\n              <img src={url} alt={`Generated ${index + 1}`} />\n              <button className=\"download_btn\" onClick={() => downloadImage(url)}>Download</button>\n            </div>\n          ))}\n        </div>\n        <div className='loading'>\n            <div className='loading_bar_container'>\n                <div className={loading ? \"loading_bar_full\" : \"loading_bar\"}></div>\n            </div>          \n            <div className={loading ? \"loading_text\" : \"display_none\"}>Loading...</div>\n        </div>\n      </div>\n      <div className='search_box'>\n        <input type=\"text\" ref={inputRef} className='search_input' placeholder='Guinea pigs in a rocket in space' />\n        <div className='generate_btn' onClick={generateImages}>Generate</div>\n      </div>\n    </div>\n  )\n}\n\nexport default ImageGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAO,sBAAsB;AAC7B,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAACC,YAAY,EAAEC,YAAY,EAAEC,YAAY,CAAC,CAAC;EAClF,MAAMO,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,aAAa,GAAIC,GAAG,IAAK;IAC/B,MAAMC,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,IAAI,GAAGJ,GAAG;IACZC,CAAC,CAACI,QAAQ,GAAG,qBAAqB;IAClCJ,CAAC,CAACK,KAAK,CAACC,OAAO,GAAG,MAAM;IACxBL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,CAAC,CAAC;EAE9B,CAAC;EAIC,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAId,QAAQ,CAACe,OAAO,CAACC,KAAK,KAAK,EAAE,EAAE;MACjC;IACF;IAEAd,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,EAAE;QAC3EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,4DAA4D;UAC3E,YAAY,EAAE;QAChB,CAAC;QACDT,IAAI,EAAEU,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM,EAAG,GAAExB,QAAQ,CAACe,OAAO,CAACC,KAAM,EAAC;UACnCS,CAAC,EAAE,CAAC;UACJC,IAAI,EAAE;QACR,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC,MAAMC,IAAI,GAAGF,IAAI,CAACA,IAAI,CAACG,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,CAAC;MAC9CjC,UAAU,CAAC8B,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACR/B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKwC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCzC,OAAA;MAAKwC,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChD7C,OAAA;MAAKwC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BzC,OAAA;QAAKwC,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBtC,OAAO,CAACgC,GAAG,CAAC,CAACE,GAAG,EAAES,KAAK,kBACtB9C,OAAA;UAAiBwC,SAAS,EAAC,OAAO;UAAAC,QAAA,gBAChCzC,OAAA;YAAKS,GAAG,EAAE4B,GAAI;YAACU,GAAG,EAAG,aAAYD,KAAK,GAAG,CAAE;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChD7C,OAAA;YAAQwC,SAAS,EAAC,cAAc;YAACQ,OAAO,EAAEA,CAAA,KAAMxC,aAAa,CAAC6B,GAAG,CAAE;YAAAI,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAF7EC,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN7C,OAAA;QAAKwC,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpBzC,OAAA;UAAKwC,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eAClCzC,OAAA;YAAKwC,SAAS,EAAElC,OAAO,GAAG,kBAAkB,GAAG;UAAc;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eACN7C,OAAA;UAAKwC,SAAS,EAAElC,OAAO,GAAG,cAAc,GAAG,cAAe;UAAAmC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN7C,OAAA;MAAKwC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBzC,OAAA;QAAOiD,IAAI,EAAC,MAAM;QAACC,GAAG,EAAE7C,QAAS;QAACmC,SAAS,EAAC,cAAc;QAACW,WAAW,EAAC;MAAkC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5G7C,OAAA;QAAKwC,SAAS,EAAC,cAAc;QAACQ,OAAO,EAAE7B,cAAe;QAAAsB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAA3C,EAAA,CAzEKD,cAAc;AAAAmD,EAAA,GAAdnD,cAAc;AA2EpB,eAAeA,cAAc;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}